[{"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\index.tsx":"1","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\reportWebVitals.ts":"2","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\logining\\LoginingContainer.tsx":"3","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\logining\\Logining.tsx":"4","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\store.ts":"5","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\ui\\app\\App.tsx":"6","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\app-reducer.ts":"7","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\tasks-reducer.ts":"8","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\todolists-reducer.ts":"9","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\selectors\\selectors.ts":"10","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\errors\\errorSnackBar\\ErrorSnackbar.tsx":"11","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\addItemForm\\AddItemForm.tsx":"12","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\server-api\\todolists-api.ts":"13","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\tasks\\Task.tsx":"14","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\editableSpan\\EditableSpan.tsx":"15","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\errors\\error-utils.ts":"16","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\TodolistsContainer.tsx":"17","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\Todolist.tsx":"18","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\TodoListsContainer.tsx":"19"},{"size":571,"mtime":1627253022458,"results":"20","hashOfConfig":"21"},{"size":440,"mtime":1627251859784,"results":"22","hashOfConfig":"21"},{"size":697,"mtime":1627332472553,"results":"23","hashOfConfig":"21"},{"size":5163,"mtime":1627340428813,"results":"24","hashOfConfig":"21"},{"size":1061,"mtime":1627253022639,"results":"25","hashOfConfig":"21"},{"size":2642,"mtime":1627340428789,"results":"26","hashOfConfig":"21"},{"size":4718,"mtime":1627253022643,"results":"27","hashOfConfig":"21"},{"size":9994,"mtime":1627340428779,"results":"28","hashOfConfig":"21"},{"size":6025,"mtime":1627253022640,"results":"29","hashOfConfig":"21"},{"size":196,"mtime":1627340428820,"results":"30","hashOfConfig":"21"},{"size":1034,"mtime":1627253022625,"results":"31","hashOfConfig":"21"},{"size":1633,"mtime":1627253022631,"results":"32","hashOfConfig":"21"},{"size":3176,"mtime":1627253022636,"results":"33","hashOfConfig":"21"},{"size":2749,"mtime":1627253022623,"results":"34","hashOfConfig":"21"},{"size":1430,"mtime":1627253022629,"results":"35","hashOfConfig":"21"},{"size":849,"mtime":1627253022627,"results":"36","hashOfConfig":"21"},{"size":1766,"mtime":1627340428813,"results":"37","hashOfConfig":"21"},{"size":4022,"mtime":1627340428817,"results":"38","hashOfConfig":"21"},{"size":1766,"mtime":1627340428813,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1m9ez5e",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\index.tsx",[],["82","83"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\reportWebVitals.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\logining\\LoginingContainer.tsx",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\logining\\Logining.tsx",["84"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\store.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\ui\\app\\App.tsx",["85"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\app-reducer.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\tasks-reducer.ts",["86"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\bll\\reducers\\todolists-reducer.ts",["87"],"import { Dispatch } from \"redux\"\r\nimport { ThunkAction } from \"redux-thunk\"\r\nimport { todolistsAPI, TodolistType } from \"../../server-api/todolists-api\"\r\nimport {\r\n    handleServerAppError,\r\n    handleServerNetworkError,\r\n} from \"../../../utils/features/errors/error-utils\"\r\nimport {\r\n    changeLoadingStatus,\r\n    ChangeLoadingStatusType,\r\n    RequestStatusType,\r\n    setAppError,\r\n    SetAppErrorType,\r\n} from \"./app-reducer\"\r\nimport { AppRootStateType } from \"../store\"\r\n\r\n\r\nexport type RemoveTodolistType = ReturnType<typeof removeTodolist>\r\nexport type AddTodolistType = ReturnType<typeof addTodolist>\r\nexport type ChangeTodolistTitleType = ReturnType<typeof changeTodolistTitle>\r\nexport type ChangeTodolistFilterType = ReturnType<typeof changeTodolistFilter>\r\nexport type SetTodolistType = ReturnType<typeof setTodolist>\r\nexport type ChangeTodolistEntityStatusType = ReturnType<typeof changeTodolistEntityStatus>\r\nexport type FilterValuesType = \"all\" | \"active\" | \"completed\"\r\nexport type TodolistDomainType = TodolistType & {\r\n    filter: FilterValuesType\r\n    entityStatus: RequestStatusType\r\n}\r\nexport type TodolistThunkCreatorType = ThunkAction<\r\n    Promise<void>,\r\n    AppRootStateType,\r\n    unknown,\r\n    ActionsType\r\n>\r\ntype ActionsType =\r\n    | RemoveTodolistType\r\n    | AddTodolistType\r\n    | ChangeTodolistTitleType\r\n    | ChangeTodolistFilterType\r\n    | SetTodolistType\r\n    | ChangeLoadingStatusType\r\n    | SetAppErrorType\r\n    | ChangeTodolistEntityStatusType\r\n//\r\n//\r\nconst initialState: Array<TodolistDomainType> = []\r\n//\r\n//\r\nexport const todolistsReducer = (\r\n    state = initialState,\r\n    action: ActionsType\r\n): Array<TodolistDomainType> => {\r\n    switch (action.type) {\r\n        case \"REMOVE-TODOLIST\": {\r\n            return state.filter((tl) => tl.id !== action.id)\r\n        }\r\n        case \"ADD-TODOLIST\": {\r\n            const filter: FilterValuesType = \"all\"\r\n            const entityStatus: RequestStatusType = \"idle\"\r\n            const newTodo = { ...action.todolist, filter: filter, entityStatus: entityStatus }\r\n            return [...state, newTodo]\r\n        }\r\n        case \"CHANGE-TODOLIST-TITLE\": {\r\n            const todolist = state.find((tl) => tl.id === action.id)\r\n            if (todolist) {\r\n                todolist.title = action.title\r\n            }\r\n            return [...state]\r\n        }\r\n        case \"CHANGE-TODOLIST-FILTER\": {\r\n            const todolist = state.find((tl) => tl.id === action.id)\r\n            if (todolist) {\r\n                todolist.filter = action.filter\r\n            }\r\n            return [...state]\r\n        }\r\n        case \"SET-TODO\":\r\n            return action.todos.map((tl) => ({ ...tl, filter: \"all\", entityStatus: \"idle\" }))\r\n        case \"CHANGE-ENTITYSTATUS\":\r\n            const todolist = state.find((tl) => tl.id === action.todoId)\r\n            if (todolist) {\r\n                todolist.entityStatus = action.entityStatus\r\n            }\r\n            return [...state]\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//\r\n//\r\nexport const removeTodolist = (todolistId: string) => {\r\n    return { type: \"REMOVE-TODOLIST\", id: todolistId } as const\r\n}\r\nexport const addTodolist = (todolist: TodolistType) => {\r\n    return { type: \"ADD-TODOLIST\", todolist } as const\r\n}\r\nexport const changeTodolistTitle = (id: string, title: string) => {\r\n    return { type: \"CHANGE-TODOLIST-TITLE\", id: id, title: title } as const\r\n}\r\nexport const changeTodolistFilter = (id: string, filter: FilterValuesType) => {\r\n    return { type: \"CHANGE-TODOLIST-FILTER\", id: id, filter: filter } as const\r\n}\r\nexport const setTodolist = (todos: Array<TodolistType>) => ({ type: \"SET-TODO\", todos } as const)\r\nexport const changeTodolistEntityStatus = (todoId: string, entityStatus: RequestStatusType) =>\r\n    ({ type: \"CHANGE-ENTITYSTATUS\", todoId, entityStatus } as const)\r\n//\r\n//\r\nexport const setTodoThunk = () => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatus(\"loading\"))\r\n    todolistsAPI.getTodolists().then((resp) => {\r\n        dispatch(setTodolist(resp.data))\r\n        dispatch(changeLoadingStatus(\"succeeded\"))\r\n    })\r\n}\r\nexport const addTodoThunk = (title: string) => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatus(\"loading\"))\r\n    todolistsAPI\r\n        .createTodolist(title)\r\n        .then((resp) => {\r\n            if (resp.data.resultCode === 0) {\r\n                dispatch(addTodolist(resp.data.data.item))\r\n            } else {\r\n                handleServerAppError(resp.data, dispatch)\r\n            }\r\n            dispatch(changeLoadingStatus(\"succeeded\"))\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n            dispatch(changeLoadingStatus(\"succeeded\"))\r\n        })\r\n}\r\nexport const deleteTodoThunk = (id: string) => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatus(\"loading\"))\r\n    dispatch(changeTodolistEntityStatus(id, \"loading\"))\r\n    todolistsAPI.deleteTodolist(id).then(() => {\r\n        dispatch(removeTodolist(id))\r\n        dispatch(changeTodolistEntityStatus(id, \"idle\"))\r\n        dispatch(changeLoadingStatus(\"succeeded\"))\r\n    })\r\n}\r\nexport const changeTitleTodoThunk = (id: string, title: string) => (dispatch: Dispatch) => {\r\n    dispatch(changeLoadingStatus(\"loading\"))\r\n    dispatch(changeTodolistEntityStatus(id, \"loading\"))\r\n    todolistsAPI\r\n        .updateTodolist(id, title)\r\n        .then((resp) => {\r\n            if (resp.data.resultCode === 0) {\r\n                dispatch(changeTodolistTitle(id, title))\r\n                dispatch(changeTodolistEntityStatus(id, \"succeeded\"))\r\n            } else {\r\n                handleServerAppError(resp.data, dispatch)\r\n            }\r\n            dispatch(changeLoadingStatus(\"succeeded\"))\r\n            dispatch(changeTodolistEntityStatus(id, \"succeeded\"))\r\n        })\r\n        .catch((error) => {\r\n            handleServerNetworkError(error, dispatch)\r\n            dispatch(changeLoadingStatus(\"succeeded\"))\r\n            dispatch(changeTodolistEntityStatus(id, \"succeeded\"))\r\n        })\r\n}\r\n","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\selectors\\selectors.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\errors\\errorSnackBar\\ErrorSnackbar.tsx",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\addItemForm\\AddItemForm.tsx",["88","89","90"],"import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\r\nimport {Box, Button, FormControl, IconButton, TextField} from '@material-ui/core';\r\nimport {AddBox} from '@material-ui/icons';\r\n\r\ntype AddItemFormPropsType = {\r\n    addItem: (title: string) => void\r\n    disabled: \"idle\" | \"loading\" | \"succeeded\" | \"failed\"\r\n}\r\n\r\nexport const AddItemForm = React.memo(function(props: AddItemFormPropsType) {\r\n    console.log(\"AddItemForm called\")\r\n\r\n    let [title, setTitle] = useState(\"\")\r\n    let [error, setError] = useState<string | null>(null)\r\n\r\n    const addItem = () => {\r\n        if (title.trim() !== \"\") {\r\n            props.addItem(title);\r\n            setTitle(\"\");\r\n        } else {\r\n            setError(\"Title is required\");\r\n        }\r\n    }\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setTitle(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (error !== null) {\r\n            setError(null);\r\n        }\r\n        if (e.charCode === 13) {\r\n            addItem();\r\n        }\r\n    }\r\n\r\n    return <div>\r\n        <TextField variant=\"outlined\"\r\n                   error={!!error}\r\n                   value={title}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   label=\"Title\"\r\n                   helperText={error}\r\n                   disabled={props.disabled === \"loading\"}\r\n        />\r\n        <IconButton color=\"primary\" onClick={addItem} disabled={props.disabled === \"loading\"}>\r\n            <AddBox />\r\n        </IconButton>\r\n    </div>\r\n})\r\n","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\main\\server-api\\todolists-api.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\tasks\\Task.tsx",["91","92","93","94","95"],"import React, { ChangeEvent, useCallback } from \"react\"\r\nimport { Checkbox, IconButton } from \"@material-ui/core\"\r\nimport { EditableSpan } from \"../editableSpan/EditableSpan\"\r\nimport { Delete } from \"@material-ui/icons\"\r\nimport { TaskStatuses, TaskType } from \"../../../main/server-api/todolists-api\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport {\r\n    changeTaskStatusThunk,\r\n    changeTaskTitleThunk,\r\n    deleteTasksThunk,\r\n} from \"../../../main/bll/reducers/tasks-reducer\"\r\nimport { RequestStatusType } from \"../../../main/bll/reducers/app-reducer\"\r\n\r\ntype TaskPropsType = {\r\n    task: TaskType\r\n    todolistId: string\r\n    entityStatusForTask: RequestStatusType\r\n    entityStatusForTodo?: RequestStatusType\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const dispatch = useDispatch()\r\n    const changeStatus = useCallback((id: string, status: TaskStatuses, todolistId: string) => {\r\n        dispatch(changeTaskStatusThunk(todolistId, id, status))\r\n    }, [])\r\n    const changeTaskTitle = useCallback((id: string, newTitle: string, todolistId: string) => {\r\n        dispatch(changeTaskTitleThunk(todolistId, id, newTitle))\r\n    }, [])\r\n    const onClickHandler = useCallback(\r\n        () => dispatch(deleteTasksThunk(props.todolistId, props.task.id)),\r\n        [props.todolistId, props.task.id]\r\n    )\r\n\r\n    const onChangeHandler = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => {\r\n            let newIsDoneValue = e.currentTarget.checked\r\n            changeStatus(\r\n                props.task.id,\r\n                newIsDoneValue ? TaskStatuses.Completed : TaskStatuses.New,\r\n                props.todolistId\r\n            )\r\n        },\r\n        [props.task.id, props.todolistId]\r\n    )\r\n\r\n    const onTitleChangeHandler = useCallback(\r\n        (newValue: string) => {\r\n            changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n        },\r\n        [props.task.id, props.todolistId]\r\n    )\r\n\r\n    return (\r\n        <div\r\n            key={props.task.id}\r\n            className={props.task.status === TaskStatuses.Completed ? \"is-done\" : \"\"}\r\n        >\r\n            <Checkbox\r\n                checked={props.task.status === TaskStatuses.Completed}\r\n                color=\"primary\"\r\n                onChange={onChangeHandler}\r\n                disabled={props.entityStatusForTask === \"loading\"}\r\n            />\r\n            <EditableSpan\r\n                value={props.task.title}\r\n                onChange={onTitleChangeHandler}\r\n                entityStatusForTask={props.entityStatusForTask}\r\n            />\r\n            <IconButton onClick={onClickHandler} disabled={props.entityStatusForTask === \"loading\"}>\r\n                <Delete />\r\n            </IconButton>\r\n        </div>\r\n    )\r\n})\r\n","E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\editableSpan\\EditableSpan.tsx",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\errors\\error-utils.ts",[],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\TodolistsContainer.tsx",["96"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\Todolist.tsx",["97","98","99","100","101"],"E:\\IT-Incubator\\GitHub-projects\\TodoListSmithPovvi-Project\\src\\utils\\features\\todolist\\TodoListsContainer.tsx",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":65,"column":37,"nodeType":"109","endLine":68,"endColumn":38},{"ruleId":"110","severity":1,"message":"111","line":21,"column":8,"nodeType":"112","endLine":21,"endColumn":10,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":16,"column":5,"nodeType":"116","messageId":"117","endLine":16,"endColumn":16},{"ruleId":"114","severity":1,"message":"115","line":12,"column":5,"nodeType":"116","messageId":"117","endLine":12,"endColumn":16},{"ruleId":"114","severity":1,"message":"118","line":2,"column":9,"nodeType":"116","messageId":"117","endLine":2,"endColumn":12},{"ruleId":"114","severity":1,"message":"119","line":2,"column":14,"nodeType":"116","messageId":"117","endLine":2,"endColumn":20},{"ruleId":"114","severity":1,"message":"120","line":2,"column":22,"nodeType":"116","messageId":"117","endLine":2,"endColumn":33},{"ruleId":"110","severity":1,"message":"121","line":24,"column":8,"nodeType":"112","endLine":24,"endColumn":10,"suggestions":"122"},{"ruleId":"110","severity":1,"message":"121","line":27,"column":8,"nodeType":"112","endLine":27,"endColumn":10,"suggestions":"123"},{"ruleId":"110","severity":1,"message":"121","line":30,"column":9,"nodeType":"112","endLine":30,"endColumn":42,"suggestions":"124"},{"ruleId":"110","severity":1,"message":"125","line":42,"column":9,"nodeType":"112","endLine":42,"endColumn":42,"suggestions":"126"},{"ruleId":"110","severity":1,"message":"127","line":49,"column":9,"nodeType":"112","endLine":49,"endColumn":42,"suggestions":"128"},{"ruleId":"110","severity":1,"message":"129","line":14,"column":8,"nodeType":"112","endLine":14,"endColumn":10,"suggestions":"130"},{"ruleId":"110","severity":1,"message":"131","line":34,"column":8,"nodeType":"112","endLine":34,"endColumn":10,"suggestions":"132"},{"ruleId":"110","severity":1,"message":"121","line":40,"column":9,"nodeType":"112","endLine":40,"endColumn":19,"suggestions":"133"},{"ruleId":"110","severity":1,"message":"134","line":45,"column":8,"nodeType":"112","endLine":45,"endColumn":10,"suggestions":"135"},{"ruleId":"110","severity":1,"message":"121","line":50,"column":9,"nodeType":"112","endLine":50,"endColumn":19,"suggestions":"136"},{"ruleId":"110","severity":1,"message":"121","line":56,"column":8,"nodeType":"112","endLine":56,"endColumn":10,"suggestions":"137"},{"ruleId":"110","severity":1,"message":"129","line":19,"column":8,"nodeType":"112","endLine":19,"endColumn":10,"suggestions":"138"},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["141"],"@typescript-eslint/no-unused-vars","'setAppError' is defined but never used.","Identifier","unusedVar","'Box' is defined but never used.","'Button' is defined but never used.","'FormControl' is defined but never used.","React Hook useCallback has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["142"],["143"],["144"],"React Hook useCallback has a missing dependency: 'changeStatus'. Either include it or remove the dependency array.",["145"],"React Hook useCallback has a missing dependency: 'changeTaskTitle'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'dispatch' and 'isLogining'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["148"],["149"],"React Hook useCallback has missing dependencies: 'dispatch' and 'props.id'. Either include them or remove the dependency array.",["150"],["151"],["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"154","fix":"156"},{"desc":"154","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"166","fix":"169"},{"desc":"166","fix":"170"},{"desc":"154","fix":"171"},{"desc":"164","fix":"172"},"Update the dependencies array to be: [dispatch]",{"range":"173","text":"174"},{"range":"175","text":"174"},{"range":"176","text":"174"},"Update the dependencies array to be: [dispatch, props.todolistId, props.task.id]",{"range":"177","text":"178"},"Update the dependencies array to be: [changeStatus, props.task.id, props.todolistId]",{"range":"179","text":"180"},"Update the dependencies array to be: [changeTaskTitle, props.task.id, props.todolistId]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, isLogining]",{"range":"183","text":"184"},"Update the dependencies array to be: [dispatch, props.id]",{"range":"185","text":"186"},{"range":"187","text":"186"},{"range":"188","text":"186"},{"range":"189","text":"186"},{"range":"190","text":"174"},{"range":"191","text":"184"},[1118,1120],"[dispatch]",[988,990],[1163,1165],[1293,1326],"[dispatch, props.todolistId, props.task.id]",[1691,1724],"[changeStatus, props.task.id, props.todolistId]",[1907,1940],"[changeTaskTitle, props.task.id, props.todolistId]",[537,539],"[dispatch, isLogining]",[1541,1543],"[dispatch, props.id]",[1685,1695],[1806,1808],[1968,1978],[2175,2177],[804,806]]